@import 'variables';
@import 'mixins';

// container первая переменная max-width, вторая - padding
.container {
  @include container(1352px, 36px);
}

// common styles blocks
.logo {
  outline: none;

  &__svg {
    display: block;
    width: 187px;
    height: 27px;
    fill: $secondary;
    color: $primary;
  }
}

.grey-link {
  position: relative;
  z-index: 1;
  font-size: 0.875rem;
  line-height: 100%;
  color: $grey;
  outline: none;
  transition: color 0.3s linear;

  &::before {
    @include focusPseudo(0 -8px, $pink-violet)
  }

  &:focus-visible {
    color: $primary-shade;

    &::before {
      opacity: 1;
    }
  }

  &:hover:not(:focus-visible):not(:active) {
    @media (hover:hover) {
      color: $primary;
    }
  }

  &:active {
    color: $primary-shade;
  }
}

.section-title {
  @include resetMg;
  max-width: 90%;
  font-size: 2rem;
  font-weight: 400;
  line-height: 100%;
  color: $grey-dark;
}
//product card styles
.card {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 30px;
  min-height: 420px;
  height: 100%;
  background-color: $grey-light;
  border-radius: 10px;

  &__rating {
    display: flex;
    align-items: center;
    gap: 7px;
    margin-bottom: 7px;
    font-size: 1rem;
    line-height: 150%;
    color: $secondary;
  }

  &__star {
    width: 16px;
    height: 16px;
    fill: $secondary;
  }

  &__picture {
    align-self: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    width: 100%;
    min-height: 130px;
    margin-bottom: 16px;
  }

  &__img {
    display: block;
  }

  &__title {
    @include resetMg;
    margin-bottom: auto;

    font-weight: 400;
    font-size: 1.5rem;
    line-height: 130%;
    color: $grey-dark;
  }

  &__price {
    margin-bottom: 24px;
    font-weight: 400;
    font-size: 1rem;
    line-height: 130%;
    color: $grey-shade;
  }

  &__link {
    outline: none;
  }
}
//btns round, transparent and colored
.round-btn {
  position: relative;
  width: 32px;
  height: 32px;
  border: 2px solid $primary;
  border-radius: 50%;
  transition: background-color 0.3s linear, border-color 0.3s linear;

  & svg {
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    width: 8px;
    height: 13px;
    transform: translate(-50%, -50%);
    stroke: $primary;
    stroke-width: 2px;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;
    transition: stroke 0.3s linear;
  }

  &:focus-visible:not([class*=disabled]) {
    background-color: $primary-light;

    & svg {
      stroke: $white;
    }
  }

  &:hover:not(:focus-visible):not(:active):not([class*=disabled]) {
    @media (hover: hover) {
      background-color: $primary;

      & svg {
        stroke: $white;
      }
    }
  }

  &:active:not([class*=disabled]) {
    background-color: $primary-shade;
    border-color: $primary-shade;

    & svg {
      stroke: $white;
    }
  }

  &[class*=disable] {
    border-color: $grey;

    & svg {
      stroke: $grey;
    }
  }
}

.btn-colored {
  padding: 20px 50.5px;
  font-size: 1rem;
  font-weight: 700;
  line-height: 100%;
  color: $white;
  border: 2px solid $primary;
  border-radius: 10px;
  background-color: $primary;
  transition: background-color 0.3s linear, border-color 0.3s linear;

  &:focus-visible {
    background-color: $primary-light;
    border-color: $primary-shade;
  }

  &:hover:not(:focus-visible):not(:active) {
    @media(hover:hover) {
      background-color: $primary-light;
      border-color: $primary-light;
    }
  }

  &:active {
    background-color: $primary-shade;
    border-color: $primary-shade;
  }
}

.btn-transp {
  padding: 17px 32px;
  font-size: 1rem;
  line-height: 100%;
  font-weight: 700;
  color: $primary;
  border: 2px solid $primary;
  border-radius: 10px;
  transition: background-color 0.3s linear, border-color 0.3s linear, color 0.3s linear;

  &:focus-visible {
    background-color: $primary-light;
    color: $white;
  }

  &:hover:not(:focus-visible):not(:active) {
    @media (hover:hover) {
      background-color: $primary;
      color: $white;
    }
  }

  &:active {
    background-color: $primary-shade;
    border-color: $primary-shade;
    color: $white;
  }

}
// invalid input message styles
.invalid-message {
  position: absolute;
  left: 18px;
  bottom: 100%;
  // top: -12px;
  font-size: 0.75rem;
  line-height: 133.333333%; /* 16px/12 */
}
//custom checkbox
.check {
  position: relative;
  display: flex;
  align-items: center;

  &__default {
    transform: scale(0);
    position: absolute;
    opacity: 0;


    &:focus-visible {
      &+.check__custom {
        border-color: $primary;
        box-shadow: 0px 0px 3px 2px rgba(166, 92, 240, 0.75);
      }
    }

    &:checked {
      &+.check__custom {
        border-color: $primary;
        background-color: $primary;

        svg {
          opacity: 1;
        }
      }
    }
  }

  &__custom {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-right: 8px;
    width: 14px;
    height: 14px;
    font-size: 0;
    border: 1px solid $grey;
    border-radius: 2px;
    transition: border-color 0.3s linear, box-shadow 0.3s linear, background-color 0.3s linear;
    cursor: pointer;

    svg {
      width: 12.5px;
      height: 9px;
      fill: none;
      stroke: $white;
      opacity: 0;
      transition: opacity 0.3s linear;
    }

    &:hover {
      box-shadow: 0px 0px 3px 2px rgba(166, 92, 240, 0.75);
    }
  }

}

//feedback-form styles
.feedback {
  display: flex;
  flex-direction: column;
  &__field-wrap {
    position: relative;
    margin-bottom: 30px;
  }

  &__field {
    padding: 7px 18px;
    width: 100%;
    font-weight: 400;
    font-size: 1rem;
    line-height: 250%;
    /* 40px/16 */
    color: $grey-dark;
    outline: none;
    border: 1px solid $grey-light;
    border-radius: 10px;
    background-color: $grey-light;
    transition: border-color 0.3s linear, background-color 0.3s linear;

    &::placeholder {
      color: $grey;
    }

    &:focus-visible:not(.invalid):not(.valid) {
      border-color: $primary;
      background-color: $pink-ligth;
    }

    &:hover:not(:focus-visible) {
      background-color: $grey-md;
    }
    &.invalid {
      border-color: $error-red;
    }
    &.valid {
      border-color: $valid-green;
    }
  }

  &__btn {
    align-self: flex-start;
    margin-bottom: 12px;
    padding: 19px 35px;
  }

  &__agreement {
    // position: relative;
    font-size: 0.875rem;
    line-height: 135.714286%; /* 19px/14 */
    color: $grey-dark;
    & .invalid-message {
      bottom: 80%;
    }
  }

  &__agreement-link {
    position: relative;
    color: $primary;
    text-decoration: underline;
    outline: none;
    transition: color 0.3s linear;
    &::before {
      @include focusPseudo(4px -2px 0, $pink-violet);
    }

    &:focus-visible::before {
      opacity: 1;
    }

    &:hover:not(:focus-visible):not(:active) {
      @media (hover: hover) {
        color: $primary-light;
      }
    }
    &:active {
      color: $primary-shade;
    }
  }
}
